{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","EMAIL_REGEXP","NewMovie","state","formFields","errors","titleValid","descriptionValid","imgUrlValid","imdbUrlValid","imdbIdValid","handleChange","e","target","name","value","setState","onAdd","newMovie","props","addMovie","clear","validate","match","handleSubmit","preventDefault","validateButton","errorsValid","Object","values","some","el","formFieldsValid","this","onSubmit","type","placeholder","classnames","warning","onChange","onBlur","disabled","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aee4f882.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\nimport classnames from 'classnames';\n\n// eslint-disable-next-line max-len\nconst EMAIL_REGEXP = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends Component {\n  state = {\n    formFields: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    errors: {\n      titleValid: true,\n      descriptionValid: true,\n      imgUrlValid: true,\n      imdbUrlValid: true,\n      imdbIdValid: true,\n    },\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState(state => (\n      {\n        formFields: {\n          ...state.formFields,\n          [name]: value,\n        },\n      }\n    ));\n  }\n\n  onAdd = () => {\n    const newMovie = this.state.formFields;\n\n    this.props.addMovie(newMovie);\n    this.clear();\n  }\n\n  validate = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'title':\n      case 'description':\n      case 'imdbId':\n        this.setState(state => (\n          {\n            errors: {\n              ...state.errors,\n              [`${name}Valid`]: !!value,\n            },\n          }\n        ));\n        break;\n\n      case 'imgUrl':\n      case 'imdbUrl':\n        this.setState(state => (\n          {\n            errors: {\n              ...state.errors,\n              [`${name}Valid`]: !!value.match(EMAIL_REGEXP),\n            },\n          }\n        ));\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  clear = () => {\n    this.setState({\n      formFields: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.onAdd();\n  }\n\n  validateButton = () => {\n    const errorsValid = Object.values(this.state.errors)\n      .some(el => !!el === false);\n    const formFieldsValid = Object.values(this.state.formFields)\n      .some(el => !!el === false);\n\n    return errorsValid || formFieldsValid;\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state.formFields;\n\n    const {\n      titleValid,\n      descriptionValid,\n      imgUrlValid,\n      imdbUrlValid,\n      imdbIdValid,\n    } = this.state.errors;\n\n    return (\n      <div className=\"container\">\n        <h1 className=\"header\">Add new movie</h1>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            this.onAdd();\n          }}\n        >\n          <div className=\"inputBlock\">\n            <p>Title: </p>\n            <input\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Add a title\"\n              className={classnames({\n                warning: !titleValid,\n              })}\n              value={title}\n              onChange={this.handleChange}\n              onBlur={this.validate}\n            />\n            {!titleValid\n            && <p className=\"error\">The title is not valid</p>}\n          </div>\n\n          <div className=\"inputBlock\">\n            <p>Description: </p>\n            <input\n              type=\"text\"\n              name=\"description\"\n              placeholder=\"Add a description\"\n              className={classnames({\n                warning: !descriptionValid,\n              })}\n              value={description}\n              onChange={this.handleChange}\n              onBlur={this.validate}\n            />\n            {!descriptionValid\n            && <p className=\"error\">The description is not valid</p>}\n          </div>\n\n          <div className=\"inputBlock\">\n            <p>Image url: </p>\n            <input\n              type=\"text\"\n              name=\"imgUrl\"\n              placeholder=\"Add image url\"\n              className={classnames({\n                warning: !imgUrlValid,\n              })}\n              value={imgUrl}\n              onChange={this.handleChange}\n              onBlur={this.validate}\n            />\n            {!imgUrlValid\n            && <p className=\"error\">The link is not valid</p>}\n          </div>\n\n          <div className=\"inputBlock\">\n            <p>IMDb url: </p>\n            <input\n              type=\"text\"\n              name=\"imdbUrl\"\n              placeholder=\"Add IMDb url\"\n              className={classnames({\n                warning: !imdbUrlValid,\n              })}\n              value={imdbUrl}\n              onChange={this.handleChange}\n              onBlur={this.validate}\n            />\n            {!imdbUrlValid\n            && <p className=\"error\">The link is not valid</p>}\n          </div>\n\n          <div className=\"inputBlock\">\n            <p>IMDb id: </p>\n            <input\n              type=\"text\"\n              name=\"imdbId\"\n              placeholder=\"Add IMDb id\"\n              className={classnames({\n                warning: !imdbIdValid,\n              })}\n              value={imdbId}\n              onChange={this.handleChange}\n              onBlur={this.validate}\n            />\n            {!imdbIdValid\n            && <p className=\"error\">The id is not valid</p>}\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"addMovieBtn\"\n            disabled={this.validateButton()}\n          >\n            Add new movie\n          </button>\n        </form>\n      </div>\n\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }\n    ));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            addMovie={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}